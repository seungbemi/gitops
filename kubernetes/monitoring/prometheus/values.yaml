kube-prometheus-stack:
  fullnameOverride: prometheus
  defaultRules:
    create: true
    rules:
      alertmanager: true
      etcd: false
      configReloaders: true
      general: true
      k8s: true
      kubeApiserverAvailability: true
      kubeApiserverBurnrate: true
      kubeApiserverHistogram: true
      kubeApiserverSlos: true
      kubeControllerManager: true
      kubelet: true
      kubeProxy: false
      kubePrometheusGeneral: true
      kubePrometheusNodeRecording: true
      kubernetesApps: true
      kubernetesResources: true
      kubernetesStorage: true
      kubernetesSystem: true
      kubeSchedulerAlerting: false
      kubeSchedulerRecording: true
      kubeStateMetrics: true
      network: true
      node: true
      nodeExporterAlerting: true
      nodeExporterRecording: true
      prometheus: true
      prometheusOperator: true
  kubeControllerManager:
    enabled: false
    service:
      enabled: true
      port: 10252
      targetPort: 10252
      selector:
        component: kube-controller-manager
  kubeEtcd:
    service:
      enabled: false
      port: 2381
      targetPort: 2381
      selector:
        component: etcd
  kubeScheduler:
    service:
      enabled: false
      port: 10251
      targetPort: 10251
      selector:
        component: kube-scheduler
  kubeProxy:
    enabled: false
    service:
      enabled: true
      port: 10249
      targetPort: 10249
      selector:
        k8s-app: kube-proxy
  prometheusOperator:
    resources:
      limits:
        cpu: 100m
        memory: 150Mi
      requests:
        cpu: 15m
        memory: 50Mi
    prometheusConfigReloader:
      resources:
        requests:
          cpu: 10m
          memory: 30Mi
        limits:
          cpu: 20m
          memory: 50Mi
  prometheus:
    prometheusSpec:
      retention: 3y
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      storageSpec:
        volumeClaimTemplate:
          spec:
            selector:
              matchLabels:
                app.kubernetes.io/name: pv-prometheus
            resources:
              requests:
                storage: 50Gi
      resources:
        limits:
          cpu: 800m
          memory: 1.5Gi
        requests:
          cpu: 500m
          memory: 1Gi

      readinessProbe:
        httpGet:
          path: /-/ready
          port: web
        initialDelaySeconds: 60
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 60

      startupProbe:
        httpGet:
          path: /-/ready
          port: web
        initialDelaySeconds: 60
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 360

  alertmanager:
    alertmanagerSpec:
      replicas: 2
      useExistingSecret: true
      configSecret: alertmanager-secret-config
      alertmanagerConfigSelector:
        matchLabels:
          role: alertmanager-config
      storage:
        volumeClaimTemplate:
          spec:
            selector:
              matchLabels:
                app.kubernetes.io/name: pv-alertmanager
            resources:
              requests:
                storage: 100Mi
      resources:
        limits:
          cpu: 30m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 50Mi
  prometheus-node-exporter:
    resources:
      limits:
        cpu: 100m
        memory: 100Mi
      requests:
        cpu: 30m
        memory: 60Mi
  grafana:
    env:
      GF_SECURITY_ALLOW_EMBEDDING: true
    admin:
      existingSecret: grafana-dashboard
      userKey: admin-user
      passwordKey: admin-password
    sidecar:
      notifiers:
        enabled: true
        label: grafana_notifier
    resources:
      limits:
        cpu: 60m
        memory: 1Gi
      requests:
        cpu: 30m
        memory: 500Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
spec:
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - name: jellyfin
        image: jellyfin/jellyfin:10.8.8
        imagePullPolicy: IfNotPresent
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: JELLYFIN_DATA_DIR
          value: "/data"
        - name: JELLYFIN_CONFIG_DIR
          value: "/config"
        - name: JELLYFIN_CACHE_DIR
          value: "/cache"
        envFrom:
        - secretRef:
            name: jellyfin-secrets
            optional: false
        ports:
        - containerPort: 8096
          protocol: TCP
        volumeMounts:
        - mountPath: /data/data
          name: jellyfin-data
        - mountPath: /data/transcodes
          name: jellyfin
          subPath: transcodes
        - mountPath: /data/metadata
          name: jellyfin
          subPath: metadata
        - mountPath: /data/plugins
          name: jellyfin
          subPath: plugins
        - mountPath: /cache
          name: jellyfin
          subPath: cache
        - mountPath: /config
          name: jellyfin
          subPath: config
        - mountPath: /media/video
          name: video
          readOnly: true
        - mountPath: /media/music
          name: music
          readOnly: true

      restartPolicy: Always
      volumes:
      - name: video
        nfs:
          path: /volume2/video
          readOnly: true
          server: diskstation.local
      - name: music
        nfs:
          path: /volume2/music
          readOnly: true
          server: diskstation.local
      - name: jellyfin
        nfs:
          path: /volume1/LTS/jellyfin
          server: diskstation.local
      - name: jellyfin-data
        persistentVolumeClaim:
          claimName: jellyfin-data
